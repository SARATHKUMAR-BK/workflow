name: Deploy image
on:
  workflow_dispatch:
    inputs:
      target_env:
        description: Env to deploy the builds(dev,int,stag,spro)
        default: dev
        required: true
      component:
        description: Name of the component(Possible values are integration-server,universal-messaging)
        default: terracotta-server
        required: true
      tag:
        description: Mention the tag of the image ( Example 10.11.0)
        default: "21.10"
        required: true
      platform:
        description: Specify the Cloud Platform ( Example aws , azure )
        default: aws
        required: true
      user:
        default: Sarath
      app_version:
        description: Specify the current app version ( Example 1012 )
        default: "1012"
        required: true
jobs:
  Deploy_image:
      runs-on: ubuntu-latest
      steps:
       - uses: actions/checkout@v2
         name: Checkout the current repository
       - name: variable
         run: |
            s=${{ github.event.inputs.target_env }}
             echo "$s"
       - name: using the var
         run: echo "$s"
         
       - name: Configure AWS Credentials for s3
         uses: aws-actions/configure-aws-credentials@v1
         with:
          aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_DEV_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_DEV_REGION }}
       -  name: ECR RnD Login
          id: ecr-login
          uses: aws-actions/amazon-ecr-login@v1
          if: github.event.inputs.platform == 'aws' || github.event.inputs.platform == 'all'
           
       - name: Configure AWS Credentials
         uses: aws-actions/configure-aws-credentials@v1
         with:
          aws-access-key-id: ${{ secrets.ACCESSKEY }}
          aws-secret-access-key: ${{ secrets.SECRETKEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
          if: github.event.inputs.platform == 'aws' || github.event.inputs.platform == 'all'
       # name: Validate Inputs
       # uses: ./image-deployment/actions/inputvalidation
       # with:
       #    target_env: ${{ github.event.inputs.target_env }}
       #    component: ${{ github.event.inputs.component }}
       #    tag: ${{ github.event.inputs.tag }}
       #    platform: ${{ github.event.inputs.platform }}
       #    app_version: ${{ github.event.inputs.currentversion }}
      #- name: shell
      #  run: |
      #     s=$(docker pull ${{ steps.ecr-login.outputs.registry }}/terracotta-server:222 || true)
      #     echo $s
            
       - name: Deployement Process
         uses: ./image-deployment/actions/deploy-image
         with: 
            target_env: ${{ github.event.inputs.target_env }}
            platform: ${{ github.event.inputs.platform }}
            tag: ${{ github.event.inputs.tag }}
            component: ${{ github.event.inputs.component }}
            bucket_name: cldp
            metadata_path: buildfiles
            app_version: ${{ github.event.inputs.app_version }}
            source_aws_registry: ${{ steps.ecr-login.outputs.registry }}
