name: Deploy image
on:
  workflow_dispatch:
    inputs:
      target_env:
        description: Env to deploy the builds(dev,int,stag,spro)
        default: dev
        required: true
      component:
        description: Name of the component(Possible values are all integration-server,universal-messaging)
        default: terracotta-server
        required: true
      tag:
        description: Mention the tag of the image ( Example all or specific tag)
        default: "10.11.22.04"
        required: true
      platform:
        description: Specify the Cloud Platform ( Example aws , azure )
        default: aws
        required: true
      user:
        default: Sarath
      app_version:
        description: Specify the current app version ( Example 1012 )
        default: "1012"
        required: true
jobs:
  Deploy_image:
      runs-on: ubuntu-latest
      steps:
       - uses: actions/checkout@v2
         name: Checkout the current repository
         
       - name: Apply Env File
         id: vars
         run: |
            chmod 777 variable.env
             ./variable.env 

       - name: Validate Inputs
         uses: ./image-deployment/actions/inputvalidation
         with:
            target_env: ${{ github.event.inputs.target_env }}
            component: ${{ github.event.inputs.component }}
            tag: ${{ github.event.inputs.tag }}
            platform: ${{ github.event.inputs.platform }}
            app_version: ${{ github.event.inputs.app_version }}
            validversion: ${{ steps.vars.outputs.CURRENT_MAJOR_VERSION }}
            
       - name: Configure AWS Credentials for Dev
         uses: aws-actions/configure-aws-credentials@v1
         with:
          aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_DEV_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_DEV_REGION }}
       -  name: ECR RnD Login
          id: ecr-dev-login
          uses: aws-actions/amazon-ecr-login@v1
          if: github.event.inputs. target_env == 'dev' && github.event.inputs.platform == 'aws'
 
       - name: Configure AWS Credentials for Int
         uses: aws-actions/configure-aws-credentials@v1
         with:
          aws-access-key-id: ${{ secrets.AWS_INT_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_INT_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_INT_REGION }}
         if: github.event.inputs. target_env == 'int' && github.event.inputs.platform == 'aws'
       -  name: ECR RnD Login
          id: ecr-int-login
          uses: aws-actions/amazon-ecr-login@v1
          if: github.event.inputs. target_env == 'int' && github.event.inputs.platform == 'aws'
          
            
       - name: Set up Reg URLs
         id: img-regs
         run: | 
          echo "::set-output name=AWS_SOURCE_REPO_PREFIX::${{ steps.vars.outputs.AWS_REPO_PREFIX }}"
          if [[ ${{ github.event.inputs.target_env }} == "dev" ]]
          then
            echo "::set-output name=AWS_TARGET_REG_URL::${{ steps.ecr-dev-login.outputs.registry }}"
          else
            echo "::set-output name=AWS_TARGET_REG_URL::${{ steps.ecr-int-login.outputs.registry }}"
          fi
          
            
       - name: Validate image
         uses: ./image-deployment/actions/deploy-image-verification
         with:
            tag: ${{ github.event.inputs.tag }}
            component: ${{ github.event.inputs.component }}
            source_aws_registry: ${{ steps.img-regs.outputs.AWS_TARGET_REG_URL }}
            source_aws_repo_prefix: ${{ steps.img-regs.outputs.AWS_SOURCE_REPO_PREFIX }}
            image_with_tag: ${{ steps.vars.outputs.DEV_REFRESH_IMAGES }}
            
       - name: Configure AWS Credentials for s3 files
         uses: aws-actions/configure-aws-credentials@v1
         with:
          aws-access-key-id: ${{ secrets.ACCESSKEY }}
          aws-secret-access-key: ${{ secrets.SECRETKEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          if: github.event.inputs.platform == 'aws' 

          
       - name: Deployement Process
         uses: ./image-deployment/actions/deploy-image
         with: 
            target_env: ${{ github.event.inputs.target_env }}
            platform: ${{ github.event.inputs.platform }}
            tag: ${{ github.event.inputs.tag }}
            component: ${{ github.event.inputs.component }}
            bucket_name: cldp
            metadata_path: buildfiles
            app_version: ${{ github.event.inputs.app_version }}
            source_aws_registry: ${{ steps.img-regs.outputs.AWS_TARGET_REG_URL }}
            source_aws_repo_prefix: ${{ steps.img-regs.outputs.AWS_SOURCE_REPO_PREFIX }}
