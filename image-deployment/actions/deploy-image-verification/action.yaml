name: "Image Validation"
description: "Image Validation for the parameters passed"
inputs:
  tag:
    description: Image Tag
    required: false
  component:
    description: Name of the component
    required: false
  source_aws_registry:
    description: Source AWS registry
    required: true
  source_aws_repo_prefix:
    description: Source AWS Repo
    required: true
  image_with_tag:
    description: image and tag pair
    required: true 
runs:
  using: composite
  steps:
    - name: Validate Image
      run: |
          touch ./shafile.txt
          components=()
          tags=()          
          if [[ ("${{inputs.component}}" =~ "all") ]]
          then
                components=()
                tags=()
                echo "inputs.component ${{inputs.image_with_tag}} "
                for i in `echo ${{ inputs.image_with_tag }} | sed -e 's\,\ \g' `;
                do
                    com=`echo $i | cut -d ":" -f 1` 
                    components+=($com)
                    tag=`echo $i | cut -d ":" -f 2`
                    tags+=($tag)
                done
                echo " component: ${components[@]}"
                echo " tags: ${tags[@]}"
                
          else
                components=($(echo ${{ inputs.component }} | sed -e 's\,\ \g'))
                tags=($(echo ${{ inputs.tag }} | sed -e 's\,\ \g'))
                echo " component: ${components[@]}"
                echo " tags: ${tags[@]}"
            fi
            
                for cldp_component in ${!components[@]}
                    do
                      echo "AWS REPO: ${{ inputs.source_aws_repo_prefix }}"
                      repo_present=$(aws ecr describe-repositories | jq -r .repositories[].repositoryName | grep -E "${{ inputs.source_aws_repo_prefix }}/${components[${cldp_component}]}$" || true)
                      echo "repo_present: $repo_present"
                      if [[ "$repo_present" = "" ]]
                        then
                          echo "ERR: Image is not present in AWS ECR. Please promote to ECR"
                          exit 1
                      else
                      aws ecr describe-images --repository-name=$repo_present --query 'sort_by(imageDetails,& imagePushedAt)[*].imageTags[0]' --output yaml
                        tag_present=$(aws ecr describe-images --repository-name=$repo_present --query 'sort_by(imageDetails,& imagePushedAt)[*].imageTags[0]' --output yaml | grep ${tags[${cldp_component}]} | tail -n 1 | awk -F'- ' '{print $2}' || true)
                        echo "TAG: $tag_present"
                        if [[ ("$tag_present" == "") ]]
                        then
                              echo "The tag ${tags[${cldp_component}]} is not present for ${{ inputs.source_aws_repo_prefix }}/${components[${cldp_component}]}"
                              exit 1
                        fi
                        shaID=$(aws ecr describe-images --repository-name=${{ inputs.source_aws_repo_prefix }}/${components[${cldp_component}]} --image-ids imageTag=$tag_present  | jq '.imageDetails[0].imageDigest' -r)
                        echo "Info: Image present in AWS ECR."
                        echo "${components[${cldp_component}]}: $tag_present: $shaID" >> shafile.txt
                      fi
                    done
                echo "-----------SHA FILE--------------"
                cat shafile.txt
                echo "-----------SHA FILE--------------"
      shell: bash
