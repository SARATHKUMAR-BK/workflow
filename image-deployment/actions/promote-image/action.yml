name: "Promote Images"
description: "Promote Images to the target environment"
inputs:
  platform:
    description: "Platform"
    required: true
  source_env:
    description: "Source Environment"
    required: true
  target_env:
    description: "Target Environment"
    required: true
  components:
    description: "Components"
    required: true
  tags:
    description: "Components Tags"
    required: true
  app_version:
    description: current promotion process version
    required: true
  bucket_name:
    description: Metadata Bucket name
    required: true
  metadata_path:
    description: Metadata Path
    required: true
  source_aws_registry:
    description: Source AWS registry
    required: true
  target_aws_registry:
    description: Source AWS registry
    required: true
runs:
  using: composite
  steps:
    - name: promote-images
      shell: bash
      run: |
        if [[ "${{ inputs.platform }}" = "all" ]]
        then
          platforms=(aws azure)
        else
          platforms=(${{ inputs.platform }})
        fi
        echo platform: ${platforms}
        components=($(echo ${{ inputs.components }} | sed -e 's\,\ \g'))
        if [[ "${{ inputs.source_env }}" = "dev" || "${{ inputs.source_env }}" = "spro" ]]
        then
          tags=($(echo ${{ inputs.tags }} | sed -e 's\,\ \g'))
        else
          tags=()
        fi

        for pindex in ${!platforms[@]}
        do
                sourcebuildfile="${platforms[${pindex}]}-${{ inputs.source_env }}-${{ inputs.app_version }}-deploy-builds.txt"
                targetbuildfile="${platforms[${pindex}]}-${{ inputs.target_env }}-${{ inputs.app_version }}-deploy-builds.txt"
                 #--------------------Check component and tags is present or not in repository--------------------------------------------------#
                if [[ "${{ inputs.source_env }}" = "dev" || "${{ inputs.source_env }}" = "spro" ]]
                then
                      for cindex in ${!components[@]}
                      do
                          echo "start"
                          repo_present=$(aws ecr describe-repositories | jq -r .repositories[].repositoryName | grep -E "^${components[${cindex}]}$" || true)
                          echo "*******$repo_present**********"
                         if [[  "$repo_present" == "" ]]
                          then
                              echo " ${components[${cindex}]} is not there in source env repository" 
                              exit 1
                          else
                              tag_present=$(aws ecr describe-images --repository-name=${components[${cindex}]}  --query 'sort_by(imageDetails,& imagePushedAt)[*].imageTags[0]' --region=us-east-1 | grep "${tags[${cindex}]}" || true)
                              if  [[  "$tag_present" == "" ]]
                              then
                                  echo "${tags[${cindex}]} is not present for ${components[${cindex}]} in source env repository" 
                                  exit 1
                              else
                                    echo "${components[${cindex}]}:${tags[${cindex}]} is present in source env repository"

                               fi
                           fi
                       done
                 fi
    done
        
