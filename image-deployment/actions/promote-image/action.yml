name: "Promote Images"
description: "Promote Images to the target environment"
inputs:
  platform:
    description: "Platform"
    required: true
  source_env:
    description: "Source Environment"
    required: true
  target_env:
    description: "Target Environment"
    required: true
  components:
    description: "Components"
    required: true
  tags:
    description: "Components Tags"
    required: true
  app_version:
    description: current promotion process version
    required: true
  bucket_name:
    description: Metadata Bucket name
    required: true
  metadata_path:
    description: Metadata Path
    required: true
  source_aws_registry:
    description: Source AWS registry
    required: true
  target_aws_registry:
    description: Source AWS registry
    required: true
  source_aws_repo_prefix:
    description: Repo prefix for source AWS Repo
    required: true
  target_aws_repo_prefix:
    description: Repo prefix for target AWS Repo
    required: true
runs:
  using: composite
  steps:
    - name: promote-images
      shell: bash
      run: |
        if [[ "${{ inputs.platform }}" = "all" ]]
        then
          platforms=(aws azure)
        else
          platforms=(${{ inputs.platform }})
        fi
        echo platform: ${platforms}
        components=($(echo ${{ inputs.components }} | sed -e 's\,\ \g'))
        if [[ "${{ inputs.source_env }}" = "dev" || "${{ inputs.source_env }}" = "spro" ]]
        then
          tags=($(echo ${{ inputs.tags }} | sed -e 's\,\ \g'))
        else
          tags=()
        fi

        for pindex in ${!platforms[@]}
        do
          sourcebuildfile="${platforms[${pindex}]}-${{ inputs.source_env }}-${{ inputs.currentversion }}-builds.txt"
          targetbuildfile="${platforms[${pindex}]}-${{ inputs.target_env }}-${{ inputs.currentversion }}-builds.txt"
           #--------------------Check source file and tags is present or not--------------------------------------------------#
          if [[ "${{ inputs.source_env }}" = "dev" || "${{ inputs.source_env }}" = "spro" ]]
          then
                for cindex in ${!components[@]}
                do
                    echo "start"
                    repo_present=$(aws ecr describe-repositories --region=us-east-1  | jq -r .repositories[].repositoryName | grep -E "${{ inputs.source_aws_repo_prefix }}/${components[${cindex}]}$" || true)
                    echo "end"
                   if [[  "repo_present" == "" ]]
                    then
                        echo " is not there in source env" 
                        exit 1
                    else
                        tag_present=$(aws ecr describe-images --repository-name=${{ inputs.source_aws_repo_prefix }}/${components[${cindex}]}  --query 'sort_by(imageDetails,& imagePushedAt)[*].imageTags[0]' --region=us-east-1 | grep "${tags[${cindex}]}" || true)
                        if  [[  "tag_present" == "" ]]
                        then
                            echo "${tags[${cindex}]} is not present in ${components[${cindex}]} " 
                            exit 1
                        else
                              echo "${components[${cindex}]}:${tags[${cindex}]} is present in source env"
                        
                         fi
                      fi
                 done
           else
                 sourceenv_filepresent=$(aws s3 ls s3://${{ inputs.metadatabucket }}/${{ inputs.metadatapath }}/$sourcebuildfile || true)
                 if [[ "sourceenv_filepresent" == "" ]]
                 then
                    echo "No deployments done in source env, Cannot promote stable builds . Can u please first promote to ${{ inputs.source_env }}"
                    exit 1
                 fi
                 aws s3 cp s3://${{ inputs.metadatabucket }}/${{ inputs.metadatapath }}/$sourcebuildfile $sourcebuildfile 
                 for cindex in ${!components[@]}
                 do
                     component_present=`sed -n "/^${components[${cindex}]}:.*/p" $sourcebuildfile || true`
                     if [[ "$tag_present" = "" ]]
                     then
                        echo "${components[$cindex]} Image not deployed in previous env"
                        exit 1
                     fi  
                  done        
           fi
         done

        

        
